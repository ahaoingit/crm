<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brainyi.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.brainyi.domain.Product">
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="p_create_time" jdbcType="INTEGER" property="pCreateTime" />
    <result column="p_create_person" jdbcType="INTEGER" property="pCreatePerson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, p_create_time, p_create_person
  </sql>
  <select id="selectByExample" parameterType="com.brainyi.domain.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.brainyi.domain.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.brainyi.domain.Product">
    insert into product (pid, pname, p_create_time, 
      p_create_person)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{pCreateTime,jdbcType=INTEGER}, 
      #{pCreatePerson,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.brainyi.domain.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="pCreateTime != null">
        p_create_time,
      </if>
      <if test="pCreatePerson != null">
        p_create_person,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pCreateTime != null">
        #{pCreateTime,jdbcType=INTEGER},
      </if>
      <if test="pCreatePerson != null">
        #{pCreatePerson,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.brainyi.domain.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.pCreateTime != null">
        p_create_time = #{record.pCreateTime,jdbcType=INTEGER},
      </if>
      <if test="record.pCreatePerson != null">
        p_create_person = #{record.pCreatePerson,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      p_create_time = #{record.pCreateTime,jdbcType=INTEGER},
      p_create_person = #{record.pCreatePerson,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>



  <!--  删除当前行产品-->
  <delete id="deleteProduct" parameterType="int">
    delete from product where pid = #{pid}
  </delete>

  <!--  增加新产品-->
  <insert id="addProduct" parameterType="com.brainyi.domain.Product">
     insert into product(pname,p_create_time,p_create_person)
             values(#{pname},#{pCreateTime},#{pCreatePerson})
  </insert>

<!--product与sys_user，一对一查询，一个产品对应一个创建人-->
  <resultMap id="productSysUserMap" type="com.brainyi.domain.Product">
    <id property="pid" column="pid"></id>
    <result property="pname" column="pname"></result>
    <result property="pCreateTime" column="p_create_time"></result>
    <result property="pCreatePerson" column="p_create_person"></result>


    <association property="sysUser" javaType="com.brainyi.domain.SysUser">
      <id property="sysUserId" column="sys_user_id"></id>
      <result property="sysUserName" column="sys_user_name"></result>
      <result property="phone" column="phone"></result>
      <result property="email" column="email"></result>
      <result property="joinTime" column="join_time"></result>
      <result property="password" column="password"></result>
      <result property="dId" column="d_id"></result>
    </association>
  </resultMap>

<!-- 一对一查询-->
  <select id="selectAllProducts" resultMap="productSysUserMap">
      select p.pid, p.pname,p.p_create_time,s.sys_user_name,s.sys_user_id
      from product p,sys_user s
      where p.p_create_person = s.sys_user_id
  </select>

  <!--批量删除-->
  <delete id="deleteAll" parameterType="java.util.List">

    <foreach item="pid" collection="list" open="(" close=")" separator=",">
      #{pid}
    </foreach>
  </delete>

</mapper>